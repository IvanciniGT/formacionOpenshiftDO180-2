# Un secret es una tabla con propiedades configurables... con las que hay tener cuidao!
# Una tabla de configuraciones SECRETAS!

kind:                       Secret
apiVersion:                 v1

metadata:
  name:                     datos_del_mariadb

data:
  contrasena:               aXZhbjEyMzQ= #ivan1234
  contrasena_usuario_root:  cm9vdDEyMzQ= #root1234

# Los valores de los secrets, en estos ficheros tienen que ir en base64.
# echo -n 'valor_claro' | base64
# Ya estamos tranquilos? NI DE COÑA !!! Eso no está encriptado
# SOLO ES UN CAMBIO DE CODIFICACION. ES TOTALMENTE REVERSIBLE
# echo -n 'valor_oscuro' | base64 --decode
# Esto no ofrece seguridad NINGUNA.
# Lo único que me garantizan los secrets es que DENTRO DE KUBERNETES, 
# EN SU BBDD los datos de los secrets se almacenan encriptados.
# Además, kubernetes los trata con especial cuidado:
# - no los saca nunca en claro en los logs
# - Si lo tiene que pasar a un contenedor, nunca lo escribiría en un fichero...

# En kubernetes os dije que nunca usamos lenguaje imperativo para crear objetos... solo los declaramos
# Usamos lenguaje DECLARATIVO.,.. que es esto que ponemos en los YAML

# Pero como todo... TIENE SUS EXCEPCIONES!
# Y esta es una de ellas.
# Nunca creamos Secrets mediante estos ficheros. Podemos hacerlo.
# Podemos pedirle a kubernetes el YAML de un secret
# Pero nunca crearemos un secrete mediante esta sintaxis... por motivos OBVIOS
# Si pongo la contraseña en un fichero, hay riesgo de que alguien lo vea, robo, copia, etc...
# Por tanto, los secrets se crean mediante la CLI de kubernetes:

# kubectl create secret generic datos_del_mariadb \
#  --from-literal=contrasena=ivan1234 \
#  --from-literal=contrasena_usuario_root=root1234 

# Y eso no queda guardado en ningún sitio (bueno si.. en el historial de la terminal desde la que se hizo)
# YA me puedo asegurar luego de liquidar el historial de la terminal